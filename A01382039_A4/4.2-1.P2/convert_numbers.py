# -*- coding: utf-8 -*-
"""convert_numbers.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gUj-rOkZnSR3cH5IqWPxqrVTDCoOxWzw
"""

import os
import time

"""
This module converts numbers from a file into binary and
hexadecimal formats, prints the results, and saves them
to a file.
"""


def read_file(file_path):
    """
    Read the file and return a list of numbers.
    """
    data = []
    try:
        with open(file_path, 'r', encoding='utf-8') as file:
            for line_num, line in enumerate(file, start=1):
                try:
                    number = float(line.strip())
                    data.append(number)
                except ValueError:
                    print(f"Warning: Invalid data at line {line_num}:\
                     '{line}'")
    except FileNotFoundError:
        print(f"Error: File '{file_path}' not found.")
        return []
    except PermissionError:
        print(f"Error: Permission denied for file '{file_path}'.")
        return []
    # It's recommended to handle specific exceptions; for unexpected
    #ones, consider logging or re-raising.
    return data

def convert_numbers(data):
    """
    Convert numbers to binary and hexadecimal.
    """
    binary_results = [bin(int(num)) for num in data]
    hexadecimal_results = [hex(int(num)) for num in data]
    return binary_results, hexadecimal_results

def print_and_save_results(binary_results, hexadecimal_results,\
                           elapsed_time):
    """
    Print and save the conversion results along with the elapsed time.
    """
    print("Conversion Results:")
    print("Binary:")
    for result in binary_results:
        print(result)
    print("\nHexadecimal:")
    for result in hexadecimal_results:
        print(result)

    with open('ConversionResults.txt', 'w', encoding='utf-8') \
    as result_file:
        result_file.write("Conversion Results:\n")
        result_file.write("Binary:\n")
        result_file.write("\n".join(binary_results) + "\n\n")
        result_file.write("Hexadecimal:\n")
        result_file.write("\n".join(hexadecimal_results) + "\n")
        result_file.write(f"Time Elapsed: {elapsed_time} seconds\n")
# pylint: disable=W0105

def main(file_name):
    """
    Main function to convert numbers to binary and hexadecimal.
    Assumes file_name is in the current working directory or
    provides a full path.
    """
    if not os.path.isabs(file_name):
        file_path = os.path.join(os.getcwd(), file_name)
    else:
        file_path = file_name

    start_time = time.time()

    data = read_file(file_path)
    if not data:
        return

    elapsed_time = time.time() - start_time

    binary_results, hexadecimal_results = convert_numbers(data)
    print_and_save_results(binary_results, hexadecimal_results,\
                           elapsed_time)

main('TC1.txt')

main('TC2.txt')

main('TC3.txt')

main('TC4.txt')

# pylint: disable=C0304